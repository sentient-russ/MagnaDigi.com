@model magnadigi.Models.ViewModelBundle
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using System.Net
@using magnadigi.Areas.Identity.Data
@{
    ViewData["Title"] = "Portal magnadigi";
}
<center>
	<div class="flexbox-container-contact">
		<div class="row-tasktable">
			<h3>Good day, @ViewData["fname"]  @ViewData["lname"]</h3>
			<p>Here is your task list.</p>
			<code>
			<table class="content-table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.taskModel.Project)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.taskModel.Subject)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.taskModel.PriorityLevel)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.taskModel.Status)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
        @foreach (var item in Model.taskList) {
                <tr>
                    <td class="medgrey-text">
                        @Html.DisplayFor(modelItem => item.Project)
                    </td>
                    <td class="leftjustify">
						@Html.Raw(item.Subject)
                    </td>
                    <td class="medred-text">
                        @Html.DisplayFor(modelItem => item.PriorityLevel)
                    </td>
                    <td class="medgrey-text">
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-controller="PortalController" name="TaskRef" asp-route-id="@item.TaskRef">Edit/Details</a>
                    </td>
                </tr>
        }
        </tbody>
                    
        </table>
        </code>
		<div class="flexbox-container-contact">
					<div class="row-gantt">
						<div class="content-gant-table">
							<h2 class="heading">Gantt Chart</h2>
							<div class="card" style="overflow: scroll">
								<svg id="gantt"></svg>
							</div>
							<div class="mx-auto mt-3 btn-group" role="group">
								<button type="button" class="btn btn-sm btn-light">Quarter Day</button>
								<button type="button" class="btn btn-sm btn-light">Half Day</button>
								<button type="button" class="btn btn-sm btn-light active">Day</button>
								<button type="button" class="btn btn-sm btn-light">Week</button>
								<button type="button" class="btn btn-sm btn-light">Month</button>
							</div>
						</div>
					</div>
				</div>
        <div class="flexbox-container">
            <div class="flexbox-item-contact-center">
                <center><h3>Log out user @ViewData["email"]?</h3></center>
            </div>
        </div>
    </div>
</div>

@{
    if (User.Identity.IsAuthenticated)
    {
		<div class="flexbox-container">
						<div class="row">
																		
							<a href="/Identity/Account/Logout/">
								<input type="button" class="button-action-call" value="Logout">
							</a>

						</div>
		</div>
    }
    else
    {
			<p>You have successfully logged out of the application.</p>
	}

	}
	
</center>
<!--JSON.parse(ViewData["TasksJson"])-->
<script>

	var tasks = @Html.Raw(Model.JsonTasks);
	var gantt_chart = new Gantt("#gantt", tasks, {

		header_height: 50,
		column_width: 30,
		step: 24,
		bar_height: 40,
		bar_corner_radius: 3,
		arrow_curve: 5,
		padding: 18,
		date_format: 'YYYY-MM-DD',
		language: 'en', // or 'es', 'it', 'ru', 'ptBr', 'fr', 'tr', 'zh', 'de', 'hu'
		
		custom_popup_html: function (task) {
		const end_date = task._end.format('MMM D');
		return `
					<div class="details-container">
					  <h5>${task.name}</h5>
					  <p>Expected to finish by ${end_date}</p>
					  <p>${task.progress}% completed!</p>
					</div>
				  `;
		},

		on_click: function (task) {
		console.log(task);
		},
		on_date_change: function(task, start, end) {
			console.log(task, start, end);
		},
		on_progress_change: function(task, progress) {
			console.log(task, progress);
		},
		on_view_change: function(mode) {
			console.log(mode);
		}
	});
	gantt_chart.change_view_mode('Week');

	$(function () {
		$(".btn-group").on("click", "button", function () {
			$btn = $(this);
			var mode = $btn.text();
			gantt_chart.change_view_mode(mode);
			$btn.parent().find('button').removeClass('active');
			$btn.addClass('active');
		});
	});



</script>
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
<br />
